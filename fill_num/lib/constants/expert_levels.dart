import 'package:fill_num/constants/hard_levels.dart';
import 'package:fraction/fraction.dart';

class ExtremeLevel {
  final Fraction current;
  final Fraction target;
  final int moves;
  final List<Operation> operations;
  final int rows;
  final int cols;
  final List<Operation> solution;
  final String description;

  ExtremeLevel({
    required this.current,
    required this.target,
    required this.moves,
    required this.operations,
    required this.rows,
    required this.cols,
    required this.solution,
    this.description = '',
  });
}

final List<ExtremeLevel> extremeLevels = [
  // Level 1-2: Basic operations with fractions
  ExtremeLevel(
    current: Fraction(1, 7),
    target: Fraction(28, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Basic fraction operations',
    operations: [
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '/', value: Fraction(4, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 2)),
      Operation(type: '-', value: Fraction(3, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(25, 100)),
      Operation(type: '-%', value: Fraction(50, 100)),
      Operation(type: '*', value: Fraction(5, 2)),
      Operation(type: '/', value: Fraction(3, 2)),
      Operation(type: '+', value: Fraction(3, 4)),
      Operation(type: '-', value: Fraction(1, 4)),
      Operation(type: '*', value: Fraction(4, 3)),
      Operation(type: '-', value: Fraction(1, 5)),
    ],
    solution: [
      Operation(type: '-%', value: Fraction(50, 100)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
    ],
  ),

  
  // Level 5-6: Introduce factorial and modulus
  ExtremeLevel(
    current: Fraction(4, 5),
    target: Fraction(3, 2),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Factorial and modulus operations',
    operations: [
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '%', value: Fraction(3, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 2)),
      Operation(type: '-', value: Fraction(4, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-%', value: Fraction(25, 100)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '/', value: Fraction(5, 1)),
      Operation(type: '+', value: Fraction(3, 4)),
      Operation(type: '-', value: Fraction(2, 1)),
      Operation(type: '%', value: Fraction(4, 1)),
    ],
    solution: [
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '%', value: Fraction(4, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(7, 1),
    target: Fraction(1, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Modulus and factorial combinations',
    operations: [
      Operation(type: '%', value: Fraction(7, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '%', value: Fraction(3, 1)),
      Operation(type: '%', value: Fraction(2, 1)),
      Operation(type: '/', value: Fraction(7, 1)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 1)),
      Operation(type: '-', value: Fraction(6, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(100, 100)),
      Operation(type: '-%', value: Fraction(86, 100)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '/', value: Fraction(14, 1)),
      Operation(type: '!', value: Fraction(2, 1)),
    ],
    solution: [
      Operation(type: '%', value: Fraction(7, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 1)),
    ],
  ),

  // Level 7-8: Introduce prime number operations
  ExtremeLevel(
    current: Fraction(10, 1),
    target: Fraction(1, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Prime number operations',
    operations: [
      Operation(type: 'nextPrime', value: Fraction(1, 1)),
      Operation(type: 'prevPrime', value: Fraction(1, 1)),
      Operation(type: 'isPrime', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 1)),
      Operation(type: '-', value: Fraction(9, 1)),
      Operation(type: '%', value: Fraction(9, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-%', value: Fraction(90, 100)),
      Operation(type: '*', value: Fraction(1, 2)),
      Operation(type: '/', value: Fraction(5, 1)),
    ],
    solution: [
      Operation(type: 'isPrime', value: Fraction(1, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(15, 1),
    target: Fraction(1, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Prime number detection',
    operations: [
      Operation(type: 'isPrime', value: Fraction(1, 1)),
      Operation(type: 'nextPrime', value: Fraction(1, 1)),
      Operation(type: 'prevPrime', value: Fraction(1, 1)),
      Operation(type: '%', value: Fraction(15, 1)),
      Operation(type: '%', value: Fraction(7, 1)),
      Operation(type: '%', value: Fraction(3, 1)),
      Operation(type: '/', value: Fraction(15, 1)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 1)),
      Operation(type: '-', value: Fraction(14, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(100, 100)),
      Operation(type: '-%', value: Fraction(93, 100)),
    ],
    solution: [
      Operation(type: 'isPrime', value: Fraction(1, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 1)),
    ],
  ),

  // Level 9-10: Introduce Euler's totient and divisor functions
  ExtremeLevel(
    current: Fraction(12, 1),
    target: Fraction(4, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Euler\'s totient function φ(n)',
    operations: [
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(3, 1)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 1)),
      Operation(type: '-', value: Fraction(8, 1)),
      Operation(type: '%', value: Fraction(11, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: 'nextPrime', value: Fraction(1, 1)),
      Operation(type: 'prevPrime', value: Fraction(1, 1)),
      Operation(type: 'isPrime', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-%', value: Fraction(67, 100)),
    ],
    solution: [
      Operation(type: 'φ', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(10, 1),
    target: Fraction(18, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Sum of divisors function σ(n)',
    operations: [
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(8, 1)),
      Operation(type: '-', value: Fraction(2, 1)),
      Operation(type: '%', value: Fraction(9, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: 'nextPrime', value: Fraction(1, 1)),
      Operation(type: 'prevPrime', value: Fraction(1, 1)),
      Operation(type: 'isPrime', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(80, 100)),
      Operation(type: '-%', value: Fraction(20, 100)),
    ],
    solution: [
      Operation(type: 'σ', value: Fraction(1, 1)),
    ],
  ),

  // Level 11-12: Introduce digit operations
  ExtremeLevel(
    current: Fraction(123, 1),
    target: Fraction(6, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Digit sum operation',
    operations: [
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'prodD', value: Fraction(1, 1)),
      Operation(type: 'rev', value: Fraction(1, 1)),
      Operation(type: 'dRoot', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(20, 1)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(3, 1)),
      Operation(type: '-', value: Fraction(117, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(100, 100)),
      Operation(type: '-%', value: Fraction(95, 100)),
    ],
    solution: [
      Operation(type: 'sumD', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(234, 1),
    target: Fraction(24, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Digit product operation',
    operations: [
      Operation(type: 'prodD', value: Fraction(1, 1)),
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'rev', value: Fraction(1, 1)),
      Operation(type: 'dRoot', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(10, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(16, 1)),
      Operation(type: '-', value: Fraction(210, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(200, 100)),
      Operation(type: '-%', value: Fraction(90, 100)),
    ],
    solution: [
      Operation(type: 'prodD', value: Fraction(1, 1)),
    ],
  ),

  // Level 13-14: Introduce more digit operations
  ExtremeLevel(
    current: Fraction(456, 1),
    target: Fraction(654, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Digit reverse operation',
    operations: [
      Operation(type: 'rev', value: Fraction(1, 1)),
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'prodD', value: Fraction(1, 1)),
      Operation(type: 'dRoot', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(198, 1)),
      Operation(type: '-', value: Fraction(100, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-%', value: Fraction(10, 100)),
    ],
    solution: [
      Operation(type: 'rev', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(987, 1),
    target: Fraction(6, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Digital root operation',
    operations: [
      Operation(type: 'dRoot', value: Fraction(1, 1)),
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'prodD', value: Fraction(1, 1)),
      Operation(type: 'rev', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(164, 1)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(3, 1)),
      Operation(type: '-', value: Fraction(981, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(100, 100)),
      Operation(type: '-%', value: Fraction(99, 100)),
    ],
    solution: [
      Operation(type: 'dRoot', value: Fraction(1, 1)),
    ],
  ),

  // Level 15-16: Introduce tau and divisor functions
  ExtremeLevel(
    current: Fraction(12, 1),
    target: Fraction(6, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Tau function τ(n) - number of divisors',
    operations: [
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'prodD', value: Fraction(1, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(4, 1)),
      Operation(type: '-', value: Fraction(6, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: 'nextPrime', value: Fraction(1, 1)),
      Operation(type: 'prevPrime', value: Fraction(1, 1)),
      Operation(type: 'isPrime', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'τ', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(18, 1),
    target: Fraction(6, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Divisor count operations',
    operations: [
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'd', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(3, 1)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'prodD', value: Fraction(1, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(4, 1)),
      Operation(type: '-', value: Fraction(12, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: 'nextPrime', value: Fraction(1, 1)),
      Operation(type: 'prevPrime', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'τ', value: Fraction(1, 1)),
    ],
  ),

  // Level 17-18: Introduce combinatorial operations
  ExtremeLevel(
    current: Fraction(5, 1),
    target: Fraction(10, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Combination operation nCk',
    operations: [
      Operation(type: 'C', value: Fraction(2, 1)),
      Operation(type: 'P', value: Fraction(2, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(5, 1)),
      Operation(type: '-', value: Fraction(3, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'prodD', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'C', value: Fraction(2, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(4, 1),
    target: Fraction(12, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Permutation operation nPk',
    operations: [
      Operation(type: 'P', value: Fraction(2, 1)),
      Operation(type: 'C', value: Fraction(2, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(4, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(8, 1)),
      Operation(type: '-', value: Fraction(2, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'prodD', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'P', value: Fraction(2, 1)),
    ],
  ),

  // Level 19-20: Introduce summation and product series
  ExtremeLevel(
    current: Fraction(4, 1),
    target: Fraction(10, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Summation operation Σ',
    operations: [
      Operation(type: '∑', value: Fraction(1, 1)),
      Operation(type: '∏', value: Fraction(1, 1)),
      Operation(type: 'C', value: Fraction(2, 1)),
      Operation(type: 'P', value: Fraction(2, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(6, 1)),
      Operation(type: '-', value: Fraction(2, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: '∑', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(3, 1),
    target: Fraction(6, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Product series operation ∏',
    operations: [
      Operation(type: '∏', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
      Operation(type: 'C', value: Fraction(2, 1)),
      Operation(type: 'P', value: Fraction(2, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(3, 1)),
      Operation(type: '-', value: Fraction(1, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: '∏', value: Fraction(1, 1)),
    ],
  ),

  // Level 21-22: Introduce triangular numbers
  ExtremeLevel(
    current: Fraction(4, 1),
    target: Fraction(10, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Triangular numbers',
    operations: [
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
      Operation(type: '∏', value: Fraction(1, 1)),
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(6, 1)),
      Operation(type: '-', value: Fraction(2, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: 'C', value: Fraction(2, 1)),
    ],
    solution: [
      Operation(type: 'tri', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(5, 1),
    target: Fraction(15, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Triangular number patterns',
    operations: [
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
      Operation(type: '∏', value: Fraction(1, 1)),
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: 'hex', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(3, 1)),
      Operation(type: '*', value: Fraction(4, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(10, 1)),
      Operation(type: '-', value: Fraction(3, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'tri', value: Fraction(1, 1)),
    ],
  ),

  // Level 23-24: Introduce pentagonal numbers
  ExtremeLevel(
    current: Fraction(4, 1),
    target: Fraction(22, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Pentagonal numbers',
    operations: [
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: 'hex', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
      Operation(type: '∏', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(6, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(18, 1)),
      Operation(type: '-', value: Fraction(2, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'pent', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(5, 1),
    target: Fraction(35, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Pentagonal number sequences',
    operations: [
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: 'hex', value: Fraction(1, 1)),
      Operation(type: 'centSq', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(5, 1)),
      Operation(type: '*', value: Fraction(7, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(30, 1)),
      Operation(type: '-', value: Fraction(3, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'pent', value: Fraction(1, 1)),
    ],
  ),

  // Level 25-26: Introduce hexagonal numbers
  ExtremeLevel(
    current: Fraction(4, 1),
    target: Fraction(28, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Hexagonal numbers',
    operations: [
      Operation(type: 'hex', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: 'centSq', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(7, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(24, 1)),
      Operation(type: '-', value: Fraction(2, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'hex', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(5, 1),
    target: Fraction(45, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Hexagonal number patterns',
    operations: [
      Operation(type: 'hex', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: 'centSq', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(3, 1)),
      Operation(type: '*', value: Fraction(9, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(40, 1)),
      Operation(type: '-', value: Fraction(3, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'hex', value: Fraction(1, 1)),
    ],
  ),

  // Level 27-28: Introduce centered square numbers
  ExtremeLevel(
    current: Fraction(3, 1),
    target: Fraction(13, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Centered square numbers',
    operations: [
      Operation(type: 'centSq', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: 'hex', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(5, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(10, 1)),
      Operation(type: '-', value: Fraction(1, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'centSq', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(4, 1),
    target: Fraction(25, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    description: 'Centered square patterns',
    operations: [
      Operation(type: 'centSq', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: 'hex', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(7, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(21, 1)),
      Operation(type: '-', value: Fraction(2, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'centSq', value: Fraction(1, 1)),
    ],
  ),

  // Level 29-30: Mixed advanced operations
  ExtremeLevel(
    current: Fraction(8, 1),
    target: Fraction(6, 1),
    moves: 4,
    rows: 5,
    cols: 4,
    description: 'Mixed advanced operations challenge',
    operations: [
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
      Operation(type: '∏', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: 'hex', value: Fraction(1, 1)),
      Operation(type: 'centSq', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(4, 1)),
      Operation(type: '-', value: Fraction(2, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'prodD', value: Fraction(1, 1)),
      Operation(type: 'dRoot', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
    ],
  ),

  ExtremeLevel(
    current: Fraction(15, 1),
    target: Fraction(4, 1),
    moves: 4,
    rows: 5,
    cols: 4,
    description: 'Final challenge - all concepts',
    operations: [
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: 'σ', value: Fraction(1, 1)),
      Operation(type: 'τ', value: Fraction(1, 1)),
      Operation(type: '!', value: Fraction(1, 1)),
      Operation(type: '∑', value: Fraction(1, 1)),
      Operation(type: '∏', value: Fraction(1, 1)),
      Operation(type: 'tri', value: Fraction(1, 1)),
      Operation(type: 'pent', value: Fraction(1, 1)),
      Operation(type: 'hex', value: Fraction(1, 1)),
      Operation(type: 'centSq', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(3, 1)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '1/x', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 1)),
      Operation(type: '-', value: Fraction(11, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: 'sumD', value: Fraction(1, 1)),
      Operation(type: 'prodD', value: Fraction(1, 1)),
      Operation(type: 'dRoot', value: Fraction(1, 1)),
    ],
    solution: [
      Operation(type: 'φ', value: Fraction(1, 1)),
      Operation(type: '√', value: Fraction(1, 1)),
    ],
  ),
];