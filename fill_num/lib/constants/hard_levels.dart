import 'package:fraction/fraction.dart';

class Operation {
  final String type;
  final Fraction value;

  Operation({required this.type, required this.value});

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is Operation && other.type == type && other.value == value;
  }

  @override
  int get hashCode => type.hashCode ^ value.hashCode;
}

class HardcoreLevel {
  final Fraction current;
  final Fraction target;
  final int moves;
  final List<Operation> operations;
  final int rows;
  final int cols;
  final List<Operation> solution;

  HardcoreLevel({
    required this.current,
    required this.target,
    required this.moves,
    required this.operations,
    required this.rows,
    required this.cols,
    required this.solution,
  });
}

final List<HardcoreLevel> hardcoreLevels = [
  // Level 1: Introduction 

  HardcoreLevel(
    current: Fraction(2, 5),
    target: Fraction(1, 2),
    moves: 2,
    rows: 3,
    cols: 3,
    operations: [
      Operation(type: '+', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(3, 5)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(10, 100)),
      Operation(type: '-%', value: Fraction(10, 100)),
      Operation(type: '*', value: Fraction(1, 2)),
      Operation(type: '/', value: Fraction(2, 1)),
    ],
    solution: [
      Operation(type: '+', value: Fraction(3, 5)),
      Operation(type: '*', value: Fraction(1, 2)),
    ],
  ),

  // Level 2: Simple addition and subtraction
  HardcoreLevel(
    current: Fraction(1, 3),
    target: Fraction(0, 1),
    moves: 3,
    rows: 3,
    cols: 3,
    operations: [
      Operation(type: '+', value: Fraction(1, 3)),
      Operation(type: '+', value: Fraction(2, 3)),
      Operation(type: '-', value: Fraction(1, 6)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '/', value: Fraction(3, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-%', value: Fraction(25, 100)),
      Operation(type: '+', value: Fraction(1, 2)),
    ],
    solution: [
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-', value: Fraction(1, 6)),
    ],
  ),

  // Level 3: Introduction to multiplication (4x3 grid)
  HardcoreLevel(
    current: Fraction(1, 2),
    target: Fraction(3, 16),
    moves: 3,
    rows: 3,
    cols: 4,
    operations: [
      Operation(type: '*', value: Fraction(2, 5)),
      Operation(type: '*', value: Fraction(4, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '+', value: Fraction(3, 4)),
      Operation(type: '-', value: Fraction(1, 4)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(100, 100)),
      Operation(type: '-%', value: Fraction(50, 100)),
      Operation(type: '*', value: Fraction(3, 2)),
      Operation(type: '/', value: Fraction(3, 1)),
      Operation(type: '+', value: Fraction(1, 1)),
      Operation(type: '-', value: Fraction(1, 2)),
    ],
    solution: [
      Operation(type: '-', value: Fraction(1, 4)),
      Operation(type: '-%', value: Fraction(50, 100)),
      Operation(type: '*', value: Fraction(3, 2)),
    ],
  ),

  // Level 4: Division focus (4x3 grid)
  HardcoreLevel(
    current: Fraction(3, 4),
    target: Fraction(25, 16),
    moves: 4,
    rows: 3,
    cols: 4,
    operations: [
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '/', value: Fraction(3, 1)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '+', value: Fraction(1, 4)),
      Operation(type: '-', value: Fraction(1, 2)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-%', value: Fraction(25, 100)),
      Operation(type: '*', value: Fraction(1, 2)),
      Operation(type: '/', value: Fraction(4, 1)),
      Operation(type: '+', value: Fraction(3, 8)),
      Operation(type: '-', value: Fraction(1, 8)),
    ],
    solution: [
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '*', value: Fraction(2, 1)),
      Operation(type: '-%', value: Fraction(25, 100)),
      Operation(type: '-', value: Fraction(1, 8)),
    ],
  ),

  // Level 5: Mixed operations (4x3 grid)
  // HardcoreLevel(
  //   current: Fraction(2, 5),
  //   target: Fraction(25, 18),
  //   moves: 4,
  //   rows: 3,
  //   cols: 4,
  //   operations: [
  //     Operation(type: '*', value: Fraction(3, 1)),
  //     Operation(type: '/', value: Fraction(1, 2)),
  //     Operation(type: '+', value: Fraction(4, 5)),
  //     Operation(type: '-', value: Fraction(1, 5)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(200, 100)),
  //     Operation(type: '-%', value: Fraction(50, 100)),
  //     Operation(type: '*', value: Fraction(5, 3)),
  //     Operation(type: '/', value: Fraction(2, 5)),
  //     Operation(type: '+', value: Fraction(1, 1)),
  //     Operation(type: '-', value: Fraction(7, 3)),
  //   ],
  //   solution: [
  //     Operation(type: '*', value: Fraction(5, 3)),
  //     Operation(type: '-', value: Fraction(7, 3)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '-%', value: Fraction(50, 100)),
  //   ],
  // ),

  // Level 6: More complex operations (4x4 grid)
  HardcoreLevel(
    current: Fraction(3, 8),
    target: Fraction(135, 1),
    moves: 5,
    rows: 4,
    cols: 4,
    operations: [
      Operation(type: '*', value: Fraction(5, 1)),
      Operation(type: '/', value: Fraction(1, 2)),
      Operation(type: '+', value: Fraction(5, 8)),
      Operation(type: '-', value: Fraction(1, 4)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(200, 100)),
      Operation(type: '-%', value: Fraction(50, 100)),
      Operation(type: '*', value: Fraction(4, 3)),
      Operation(type: '/', value: Fraction(2, 5)),
      Operation(type: '+', value: Fraction(5, 1)),
      Operation(type: '-', value: Fraction(1, 2)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '/', value: Fraction(1, 3)),
      Operation(type: '+', value: Fraction(7, 8)),
      Operation(type: '-', value: Fraction(1, 8)),
    ],
    solution: [
      Operation(type: '+', value: Fraction(5, 8)),
      Operation(type: '+%', value: Fraction(200, 100)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '*', value: Fraction(5, 1)),
    ],
  ),

  // Level 7
  HardcoreLevel(
    current: Fraction(2, 1),
    target: Fraction(9, 1),
    moves: 3,
    rows: 4,
    cols: 4,
    operations: [
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-%', value: Fraction(25, 100)),
      Operation(type: '*', value: Fraction(3, 4)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '+', value: Fraction(1, 2)),
      Operation(type: '-', value: Fraction(3, 4)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(10, 100)),
      Operation(type: '-%', value: Fraction(90, 100)),
      Operation(type: '*', value: Fraction(1, 2)),
      Operation(type: '/', value: Fraction(4, 1)),
      Operation(type: '+', value: Fraction(1, 5)),
      Operation(type: '-', value: Fraction(1, 10)),
      Operation(type: '*', value: Fraction(2, 3)),
      Operation(type: '/', value: Fraction(3, 2)),
    ],
    solution: [
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(10, 100)),
      Operation(type: '+', value: Fraction(1, 5)),
    ],
  ),

  // Level 8
  HardcoreLevel(
    current: Fraction(2, 1),
    target: Fraction(4, 5),
    moves: 3,
    rows: 4,
    cols: 4,
    operations: [
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-%', value: Fraction(25, 100)),
      Operation(type: '*', value: Fraction(3, 4)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '+', value: Fraction(1, 2)),
      Operation(type: '-', value: Fraction(3, 4)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(10, 100)),
      Operation(type: '-%', value: Fraction(90, 100)),
      Operation(type: '*', value: Fraction(1, 2)),
      Operation(type: '/', value: Fraction(4, 1)),
      Operation(type: '+', value: Fraction(1, 5)),
      Operation(type: '-', value: Fraction(1, 10)),
      Operation(type: '*', value: Fraction(2, 3)),
      Operation(type: '/', value: Fraction(3, 2)),
    ],
    solution: [
      Operation(type: '-%', value: Fraction(90, 100)),
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '+', value: Fraction(1, 2)),
    ],
  ),

  // Level 9
  // HardcoreLevel(
  //   current: Fraction(1, 4),
  //   target: Fraction(20, 27),
  //   moves: 4,
  //   rows: 4,
  //   cols: 4,
  //   operations: [
  //     Operation(type: '*', value: Fraction(5, 1)),
  //     Operation(type: '/', value: Fraction(2, 1)),
  //     Operation(type: '+', value: Fraction(3, 4)),
  //     Operation(type: '-', value: Fraction(1, 2)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(150, 100)),
  //     Operation(type: '-%', value: Fraction(75, 100)),
  //     Operation(type: '*', value: Fraction(3, 2)),
  //     Operation(type: '/', value: Fraction(3, 4)),
  //     Operation(type: '+', value: Fraction(1, 1)),
  //     Operation(type: '-', value: Fraction(1, 4)),
  //     Operation(type: '*', value: Fraction(4, 1)),
  //     Operation(type: '/', value: Fraction(1, 2)),
  //     Operation(type: '+', value: Fraction(2, 3)),
  //     Operation(type: '-', value: Fraction(1, 3)),
  //   ],
  //   solution: [
  //     Operation(type: '+', value: Fraction(2, 3)),
  //     Operation(type: '-', value: Fraction(1, 4)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(150, 100)),
  //   ],
  // ),

  // Level 10: Advanced operations (5x4 grid)
  // HardcoreLevel(
  //   current: Fraction(1, 10),
  //   target: Fraction(1, 8),
  //   moves: 4,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '*', value: Fraction(6, 1)),
  //     Operation(type: '/', value: Fraction(1, 2)),
  //     Operation(type: '+', value: Fraction(2, 5)),
  //     Operation(type: '-', value: Fraction(1, 10)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(500, 100)),
  //     Operation(type: '-%', value: Fraction(80, 100)),
  //     Operation(type: '*', value: Fraction(4, 1)),
  //     Operation(type: '/', value: Fraction(2, 3)),
  //     Operation(type: '+', value: Fraction(3, 2)),
  //     Operation(type: '-', value: Fraction(1, 5)),
  //     Operation(type: '*', value: Fraction(5, 2)),
  //     Operation(type: '/', value: Fraction(1, 4)),
  //     Operation(type: '+', value: Fraction(4, 5)),
  //     Operation(type: '-', value: Fraction(1, 2)),
  //     Operation(type: '*', value: Fraction(3, 4)),
  //     Operation(type: '/', value: Fraction(5, 1)),
  //     Operation(type: '+', value: Fraction(7, 10)),
  //     Operation(type: '-', value: Fraction(1, 20)),
  //   ],
  //   solution: [
  //     Operation(type: '+%', value: Fraction(500, 100)),
  //     Operation(type: '+', value: Fraction(2, 5)),
  //     Operation(type: '-', value: Fraction(1, 2)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //   ],
  // ),

  // Level 11: Challenging percentages (5x4 grid)
  HardcoreLevel(
    current: Fraction(4, 1),
    target: Fraction(13, 1),
    moves: 3,
    rows: 4,
    cols: 5,
    operations: [
      Operation(type: '+%', value: Fraction(10, 100)),
      Operation(type: '-%', value: Fraction(20, 100)),
      Operation(type: '*', value: Fraction(3, 4)),
      Operation(type: '/', value: Fraction(5, 4)),
      Operation(type: '+', value: Fraction(1, 5)),
      Operation(type: '-', value: Fraction(1, 4)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(5, 100)),
      Operation(type: '-%', value: Fraction(1, 100)),
      Operation(type: '*', value: Fraction(17, 11)),
      Operation(type: '/', value: Fraction(10, 11)),
      Operation(type: '+', value: Fraction(3, 20)),
      Operation(type: '-', value: Fraction(1, 10)),
      Operation(type: '*', value: Fraction(9, 8)),
      Operation(type: '/', value: Fraction(8, 9)),
      Operation(type: '+', value: Fraction(1, 11)),
      Operation(type: '-', value: Fraction(2, 12)),
      Operation(type: '*', value: Fraction(13, 22)),
      Operation(type: '/', value: Fraction(8, 1)),
    ],
    solution: [
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '-%', value: Fraction(20, 100)),
      Operation(type: '+', value: Fraction(1, 5)),
    ],
  ),

  // Level 12: Complex fraction operations (5x4 grid)
  // HardcoreLevel(
  //   current: Fraction(2, 7),
  //   target: Fraction(1, 25),
  //   moves: 4,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '*', value: Fraction(7, 2)),
  //     Operation(type: '/', value: Fraction(2, 7)),
  //     Operation(type: '+', value: Fraction(3, 14)),
  //     Operation(type: '-', value: Fraction(1, 7)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(250, 100)),
  //     Operation(type: '-%', value: Fraction(60, 100)),
  //     Operation(type: '*', value: Fraction(5, 4)),
  //     Operation(type: '/', value: Fraction(4, 5)),
  //     Operation(type: '+', value: Fraction(5, 7)),
  //     Operation(type: '-', value: Fraction(2, 7)),
  //     Operation(type: '*', value: Fraction(3, 1)),
  //     Operation(type: '/', value: Fraction(1, 3)),
  //     Operation(type: '+', value: Fraction(4, 9)),
  //     Operation(type: '-', value: Fraction(1, 9)),
  //     Operation(type: '*', value: Fraction(7, 5)),
  //     Operation(type: '/', value: Fraction(12, 7)),
  //     Operation(type: '+', value: Fraction(11, 14)),
  //     Operation(type: '-', value: Fraction(3, 14)),
  //   ],
  //   solution: [
  //     Operation(type: '*', value: Fraction(7, 5)),
  //     Operation(type: '-%', value: Fraction(60, 100)),
  //     Operation(type: '/', value: Fraction(4, 5)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //   ],
  // ),

  // Level 13: Advanced percentage operations (5x4 grid)
  // HardcoreLevel(
  //   current: Fraction(3, 10),
  //   target: Fraction(1, 24),
  //   moves: 7,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '+%', value: Fraction(50, 100)),
  //     Operation(type: '-%', value: Fraction(30, 100)),
  //     Operation(type: '/', value: Fraction(9, 10)),
  //     Operation(type: '/', value: Fraction(10, 9)),
  //     Operation(type: '+', value: Fraction(1, 5)),
  //     Operation(type: '-', value: Fraction(1, 10)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(10, 100)),
  //     Operation(type: '-%', value: Fraction(20, 100)),
  //     Operation(type: '*', value: Fraction(3, 4)),
  //     Operation(type: '/', value: Fraction(4, 3)),
  //     Operation(type: '+', value: Fraction(7, 100)),
  //     Operation(type: '-', value: Fraction(3, 100)),
  //     Operation(type: '*', value: Fraction(11, 10)),
  //     Operation(type: '/', value: Fraction(10, 11)),
  //     Operation(type: '+', value: Fraction(2, 25)),
  //     Operation(type: '-', value: Fraction(1, 25)),
  //     Operation(type: '*', value: Fraction(27, 25)),
  //     Operation(type: '/', value: Fraction(25, 27)),
  //   ],
  //   solution: [
  //     Operation(type: '/', value: Fraction(9, 10)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '/', value: Fraction(4, 3)),
  //     Operation(type: '+%', value: Fraction(50, 100)),
  //   ],
  // ),

  // Level 14: Mixed complex operations (5x4 grid)
  // HardcoreLevel(
  //   current: Fraction(5, 12),
  //   target: Fraction(125, 216),
  //   moves: 8,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '*', value: Fraction(5, 3)),
  //     Operation(type: '/', value: Fraction(3, 5)),
  //     Operation(type: '+', value: Fraction(7, 24)),
  //     Operation(type: '-', value: Fraction(5, 24)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(150, 100)),
  //     Operation(type: '-%', value: Fraction(40, 100)),
  //     Operation(type: '*', value: Fraction(4, 3)),
  //     Operation(type: '/', value: Fraction(3, 4)),
  //     Operation(type: '+', value: Fraction(11, 36)),
  //     Operation(type: '-', value: Fraction(5, 36)),
  //     Operation(type: '*', value: Fraction(6, 5)),
  //     Operation(type: '/', value: Fraction(5, 6)),
  //     Operation(type: '+', value: Fraction(13, 48)),
  //     Operation(type: '-', value: Fraction(7, 48)),
  //     Operation(type: '*', value: Fraction(7, 6)),
  //     Operation(type: '/', value: Fraction(6, 7)),
  //     Operation(type: '+', value: Fraction(17, 60)),
  //     Operation(type: '-', value: Fraction(11, 60)),
  //   ],
  //   solution: [
  //     Operation(type: '+%', value: Fraction(150, 100)),
  //     Operation(type: '-', value: Fraction(5, 24)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //   ],
  // ),

  // Level 15: Advanced exponentiation (5x4 grid)
  // HardcoreLevel(
  //   current: Fraction(4, 9),
  //   target: Fraction(121, 144),
  //   moves: 8,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '*', value: Fraction(2, 3)),
  //     Operation(type: '/', value: Fraction(3, 2)),
  //     Operation(type: '+', value: Fraction(5, 18)),
  //     Operation(type: '-', value: Fraction(1, 6)),
  //     Operation(type: '+%', value: Fraction(100, 100)),
  //     Operation(type: '-%', value: Fraction(50, 100)),
  //     Operation(type: '*', value: Fraction(4, 3)),
  //     Operation(type: '/', value: Fraction(3, 4)),
  //     Operation(type: '+', value: Fraction(7, 27)),
  //     Operation(type: '-', value: Fraction(5, 27)),
  //     Operation(type: '-', value: Fraction(5, 4)),
  //     Operation(type: '/', value: Fraction(4, 5)),
  //     Operation(type: '+', value: Fraction(11, 36)),
  //     Operation(type: '-', value: Fraction(7, 36)),
  //     Operation(type: '*', value: Fraction(3, 2)),
  //     Operation(type: '/', value: Fraction(2, 3)),
  //     Operation(type: '+', value: Fraction(13, 45)),
  //     Operation(type: '-', value: Fraction(11, 45)),
  //   ],
  //   solution: [
  //     Operation(type: '+', value: Fraction(13, 45)),
  //     Operation(type: '/', value: Fraction(4, 5)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //   ],
  // ),
  // Level 16
  HardcoreLevel(
    current: Fraction(1, 3),
    target: Fraction(0, 1),
    moves: 2,
    rows: 4,
    cols: 5,
    operations: [
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '+', value: Fraction(2, 9)),
      Operation(type: '-', value: Fraction(1, 3)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(100, 100)),
      Operation(type: '-%', value: Fraction(50, 100)),
      Operation(type: '*', value: Fraction(5, 6)),
      Operation(type: '/', value: Fraction(6, 5)),
      Operation(type: '+', value: Fraction(1, 6)),
      Operation(type: '-', value: Fraction(1, 9)),
      Operation(type: '*', value: Fraction(4, 3)),
      Operation(type: '/', value: Fraction(3, 4)),
      Operation(type: '+', value: Fraction(5, 12)),
      Operation(type: '-', value: Fraction(7, 12)),
      Operation(type: '*', value: Fraction(9, 8)),
      Operation(type: '/', value: Fraction(8, 9)),
      Operation(type: '+', value: Fraction(1, 4)),
      Operation(type: '-', value: Fraction(1, 12)),
    ],
    solution: [
      Operation(type: '-', value: Fraction(7, 12)),
      Operation(type: '+', value: Fraction(1, 4)),
    ],
  ),

  // Level 17: Short move (2)
  // HardcoreLevel(
  //   current: Fraction(3, 4),
  //   target: Fraction(35, 32),
  //   moves: 4,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '+', value: Fraction(1, 4)),
  //     Operation(type: '-', value: Fraction(1, 2)),
  //     Operation(type: '*', value: Fraction(8, 3)),
  //     Operation(type: '/', value: Fraction(4, 1)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(25, 100)),
  //     Operation(type: '-%', value: Fraction(75, 100)),
  //     Operation(type: '*', value: Fraction(3, 5)),
  //     Operation(type: '/', value: Fraction(5, 3)),
  //     Operation(type: '+', value: Fraction(1, 8)),
  //     Operation(type: '-', value: Fraction(3, 8)),
  //     Operation(type: '*', value: Fraction(3, 2)),
  //     Operation(type: '/', value: Fraction(1, 5)),
  //     Operation(type: '+', value: Fraction(5, 4)),
  //     Operation(type: '-', value: Fraction(1, 4)),
  //     Operation(type: '*', value: Fraction(7, 4)),
  //     Operation(type: '/', value: Fraction(4, 3)),
  //     Operation(type: '+', value: Fraction(3, 2)),
  //     Operation(type: '-', value: Fraction(3, 4)),
  //   ],
  //   solution: [
  //     Operation(type: '+%', value: Fraction(25, 100)),
  //     Operation(type: '*', value: Fraction(8, 3)),
  //     Operation(type: '-%', value: Fraction(75, 100)),
  //     Operation(type: '*', value: Fraction(7, 4)),
  //   ],
  // ),

  // Level 18: Focus on division and percentage
  HardcoreLevel(
    current: Fraction(1, 5),
    target: Fraction(9, 1),
    moves: 3,
    rows: 4,
    cols: 5,
    operations: [
      Operation(type: '/', value: Fraction(2, 1)),
      Operation(type: '*', value: Fraction(5, 1)),
      Operation(type: '+', value: Fraction(1, 10)),
      Operation(type: '-', value: Fraction(1, 2)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '-%', value: Fraction(40, 100)),
      Operation(type: '*', value: Fraction(3, 2)),
      Operation(type: '/', value: Fraction(3, 5)),
      Operation(type: '+', value: Fraction(3, 50)),
      Operation(type: '-', value: Fraction(1, 50)),
      Operation(type: '*', value: Fraction(10, 1)),
      Operation(type: '/', value: Fraction(6, 1)),
      Operation(type: '+', value: Fraction(1, 20)),
      Operation(type: '-', value: Fraction(1, 4)),
      Operation(type: '*', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(1, 5)),
      Operation(type: '-', value: Fraction(1, 5)),
    ],
    solution: [
      Operation(type: '+%', value: Fraction(50, 100)),
      Operation(type: '*', value: Fraction(10, 1)),
      Operation(type: '^2', value: Fraction(1, 1)),
    ],
  ),

  // Level 19: Exponentiation and cube root equivalent (Level 19)
  HardcoreLevel(
    current: Fraction(2, 3),
    target: Fraction(6, 1),
    moves: 3,
    rows: 4,
    cols: 5,
    operations: [
      Operation(type: '+', value: Fraction(1, 3)),
      Operation(type: '-', value: Fraction(1, 9)),
      Operation(type: '*', value: Fraction(3, 1)),
      Operation(type: '/', value: Fraction(1, 3)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(200, 100)),
      Operation(type: '-%', value: Fraction(50, 100)),
      Operation(type: '*', value: Fraction(2, 3)),
      Operation(type: '/', value: Fraction(3, 2)),
      Operation(type: '+', value: Fraction(2, 9)),
      Operation(type: '-', value: Fraction(4, 9)),
      Operation(type: '*', value: Fraction(5, 4)),
      Operation(type: '/', value: Fraction(4, 3)),
      Operation(type: '+', value: Fraction(1, 6)),
      Operation(type: '-', value: Fraction(1, 6)),
      Operation(type: '*', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(1, 1)),
      Operation(type: '+', value: Fraction(5, 3)),
      Operation(type: '-', value: Fraction(2, 3)),
    ],
    solution: [
      Operation(type: '+%', value: Fraction(200, 100)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '/', value: Fraction(4, 3)),
    ],
  ),
  // Level 20: Complex percentage combinations
  // HardcoreLevel(
  //   current: Fraction(3, 7),
  //   target: Fraction(1, 5),
  //   moves: 2,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '+', value: Fraction(1, 14)),
  //     Operation(type: '-', value: Fraction(2, 21)),
  //     Operation(type: '*', value: Fraction(7, 6)),
  //     Operation(type: '/', value: Fraction(6, 7)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(25, 100)),
  //     Operation(type: '-%', value: Fraction(40, 100)),
  //     Operation(type: '*', value: Fraction(3, 5)),
  //     Operation(type: '/', value: Fraction(5, 3)),
  //     Operation(type: '+', value: Fraction(1, 21)),
  //     Operation(type: '-', value: Fraction(1, 42)),
  //     Operation(type: '*', value: Fraction(4, 9)),
  //     Operation(type: '*', value: Fraction(9, 4)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(10, 100)),
  //     Operation(type: '-%', value: Fraction(15, 100)),
  //     Operation(type: '*', value: Fraction(5, 8)),
  //     Operation(type: '/', value: Fraction(8, 5)),
  //     Operation(type: '+', value: Fraction(3, 28)),
  //     Operation(type: '-', value: Fraction(5, 28)),
  //   ],
  //   solution: [
  //     Operation(type: '-', value: Fraction(2, 21)),
  //     Operation(type: '/', value: Fraction(5, 3)),
  //   ],
  // ),

  // Level 21: Mixed operations with uncommon fractions
  // HardcoreLevel(
  //   current: Fraction(5, 8),
  //   target: Fraction(4, 1),
  //   moves: 3,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '*', value: Fraction(2, 3)),
  //     Operation(type: '/', value: Fraction(3, 2)),
  //     Operation(type: '+', value: Fraction(1, 6)),
  //     Operation(type: '-', value: Fraction(1, 4)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(33, 100)),
  //     Operation(type: '-%', value: Fraction(25, 100)),
  //     Operation(type: '*', value: Fraction(9, 1)),
  //     Operation(type: '/', value: Fraction(9, 7)),
  //     Operation(type: '+', value: Fraction(1, 24)),
  //     Operation(type: '-', value: Fraction(1, 16)),
  //     Operation(type: '*', value: Fraction(5, 11)),
  //     Operation(type: '/', value: Fraction(11, 5)),
  //     Operation(type: '+%', value: Fraction(66, 100)),
  //     Operation(type: '-%', value: Fraction(20, 100)),
  //     Operation(type: '*', value: Fraction(13, 12)),
  //     Operation(type: '/', value: Fraction(12, 13)),
  //     Operation(type: '+', value: Fraction(3, 20)),
  //     Operation(type: '-', value: Fraction(2, 15)),
  //   ],
  //   solution: [
  //     Operation(type: '+', value: Fraction(1, 24)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '*', value: Fraction(9, 1)),
  //   ],
  // ),

  // Level 22: Exponential focus with fractions
  // HardcoreLevel(
  //   current: Fraction(2, 9),
  //   target: Fraction(1, 15),
  //   moves: 3,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '*', value: Fraction(4, 3)),
  //     Operation(type: '/', value: Fraction(3, 4)),
  //     Operation(type: '+', value: Fraction(1, 18)),
  //     Operation(type: '-', value: Fraction(1, 27)),
  //     Operation(type: '+%', value: Fraction(50, 100)),
  //     Operation(type: '-%', value: Fraction(33, 100)),
  //     Operation(type: '*', value: Fraction(5, 6)),
  //     Operation(type: '/', value: Fraction(6, 5)),
  //     Operation(type: '+', value: Fraction(2, 15)),
  //     Operation(type: '-', value: Fraction(1, 12)),
  //     Operation(type: '*', value: Fraction(8, 7)),
  //     Operation(type: '/', value: Fraction(7, 8)),
  //     Operation(type: '+%', value: Fraction(25, 100)),
  //     Operation(type: '-%', value: Fraction(10, 100)),
  //     Operation(type: '*', value: Fraction(11, 10)),
  //     Operation(type: '/', value: Fraction(10, 9)),
  //     Operation(type: '+', value: Fraction(3, 22)),
  //     Operation(type: '-', value: Fraction(1, 11)),
  //   ],
  //   solution: [
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(50, 100)),
  //     Operation(type: '/', value: Fraction(10, 9)),
  //   ],
  // ),

  // // Level 23: Complex chain with multiple fraction types
  // HardcoreLevel(
  //   current: Fraction(7, 10),
  //   target: Fraction(1, 3),
  //   moves: 3,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '*', value: Fraction(3, 7)),
  //     Operation(type: '/', value: Fraction(1, 3)),
  //     Operation(type: '+', value: Fraction(1, 20)),
  //     Operation(type: '-', value: Fraction(3, 40)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(42, 100)),
  //     Operation(type: '-%', value: Fraction(28, 100)),
  //     Operation(type: '*', value: Fraction(5, 11)),
  //     Operation(type: '*', value: Fraction(9, 5)),
  //     Operation(type: '+', value: Fraction(1, 15)),
  //     Operation(type: '-', value: Fraction(1, 30)),
  //     Operation(type: '*', value: Fraction(13, 14)),
  //     Operation(type: '/', value: Fraction(4, 13)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(15, 100)),
  //     Operation(type: '-%', value: Fraction(35, 100)),
  //     Operation(type: '*', value: Fraction(17, 16)),
  //     Operation(type: '/', value: Fraction(1, 5)),
  //     Operation(type: '+', value: Fraction(2, 25)),
  //     Operation(type: '-', value: Fraction(3, 50)),
  //   ],
  //   solution: [
  //     Operation(type: '*', value: Fraction(3, 7)),
  //     Operation(type: '-', value: Fraction(1, 30)),
  //     Operation(type: '+', value: Fraction(1, 15)),
  //   ],
  // ),

  //level 24: Advanced mixed operations
  HardcoreLevel(
    current: Fraction(5, 6),
    target: Fraction(6, 5),
    moves: 3,
    rows: 4,
    cols: 5,
    operations: [
      Operation(type: '*', value: Fraction(6, 5)),
      Operation(type: '/', value: Fraction(1, 6)),
      Operation(type: '+', value: Fraction(1, 12)),
      Operation(type: '-', value: Fraction(1, 18)),
      Operation(type: '^2', value: Fraction(1, 1)),
      Operation(type: '^3', value: Fraction(1, 1)),
      Operation(type: '+%', value: Fraction(20, 100)),
      Operation(type: '-%', value: Fraction(10, 100)),
      Operation(type: '*', value: Fraction(25, 24)),
      Operation(type: '+', value: Fraction(1, 20)),
      Operation(type: '+', value: Fraction(7, 36)),
      Operation(type: '-', value: Fraction(5, 36)),
      Operation(type: '-', value: Fraction(4, 3)),
      Operation(type: '/', value: Fraction(3, 4)),
      Operation(type: '+', value: Fraction(11, 72)),
      Operation(type: '-', value: Fraction(1, 72)),
      Operation(type: '+', value: Fraction(5, 4)),
      Operation(type: '/', value: Fraction(4, 5)),
      Operation(type: '+', value: Fraction(13, 60)),
      Operation(type: '-', value: Fraction(7, 60)),
    ],
    solution: [
      Operation(type: '-%', value: Fraction(10, 100)),
      Operation(type: '/', value: Fraction(3, 4)),
       Operation(type: '+%', value: Fraction(20, 100)),
    ],
  ),

  // Level 25
  // HardcoreLevel(
  //   current: Fraction(3, 5),
  //   target: Fraction(58, 75),
  //   moves: 3,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '+', value: Fraction(2, 15)),
  //     Operation(type: '-', value: Fraction(1, 10)),
  //     Operation(type: '*', value: Fraction(7, 3)),
  //     Operation(type: '/', value: Fraction(5, 3)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(30, 100)),
  //     Operation(type: '-%', value: Fraction(20, 100)),
  //     Operation(type: '*', value: Fraction(5, 2)),
  //     Operation(type: '+', value: Fraction(7, 3)),
  //     Operation(type: '+', value: Fraction(1, 6)),
  //     Operation(type: '-', value: Fraction(1, 15)),
  //     Operation(type: '*', value: Fraction(4, 5)),
  //     Operation(type: '-', value: Fraction(2, 9)),
  //     Operation(type: '+', value: Fraction(3, 10)),
  //     Operation(type: '-', value: Fraction(2, 25)),
  //     Operation(type: '*', value: Fraction(9, 4)),
  //     Operation(type: '/', value: Fraction(4, 9)),
  //     Operation(type: '+', value: Fraction(1, 30)),
  //     Operation(type: '-', value: Fraction(1, 27)),
  //   ],
  //   solution: [
  //     Operation(type: '*', value: Fraction(7, 3)),
  //     Operation(type: '/', value: Fraction(5, 3)),
  //     Operation(type: '-', value: Fraction(1, 15)),
  //   ],
  // ),

  // // Level 26
  // HardcoreLevel(
  //   current: Fraction(2, 9),
  //   target: Fraction(7, 5),
  //   moves: 4,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '+', value: Fraction(1, 6)),
  //     Operation(type: '-', value: Fraction(1, 18)),
  //     Operation(type: '*', value: Fraction(5, 2)),
  //     Operation(type: '/', value: Fraction(9, 5)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(40, 100)),
  //     Operation(type: '-%', value: Fraction(10, 100)),
  //     Operation(type: '*', value: Fraction(3, 7)),
  //     Operation(type: '+', value: Fraction(7, 3)),
  //     Operation(type: '+', value: Fraction(2, 9)),
  //     Operation(type: '-', value: Fraction(1, 9)),
  //     Operation(type: '+', value: Fraction(1, 45)),
  //     Operation(type: '/', value: Fraction(3, 8)),
  //     Operation(type: '+', value: Fraction(1, 12)),
  //     Operation(type: '-', value: Fraction(1, 24)),
  //     Operation(type: '*', value: Fraction(11, 5)),
  //     Operation(type: '-', value: Fraction(3, 15)),
  //     Operation(type: '+', value: Fraction(3, 18)),
  //     Operation(type: '-', value: Fraction(2, 27)),
  //   ],
  //   solution: [
  //     Operation(type: '+', value: Fraction(2, 9)),
  //     Operation(type: '*', value: Fraction(11, 5)),
  //    Operation(type: '+', value: Fraction(1, 45)),
  //    Operation(type: '+%', value: Fraction(40, 100)),
  //   ],
  // ),

  // // Level 27
  // HardcoreLevel(
  //   current: Fraction(1, 8),
  //   target: Fraction(1, 3),
  //   moves: 4,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '+', value: Fraction(1, 16)),
  //     Operation(type: '-', value: Fraction(1, 32)),
  //     Operation(type: '*', value: Fraction(9, 8)),
  //     Operation(type: '/', value: Fraction(8, 9)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(60, 100)),
  //     Operation(type: '-%', value: Fraction(30, 100)),
  //     Operation(type: '*', value: Fraction(3, 2)),
  //     Operation(type:'√', value:Fraction(1, 1)), // Square root
  //     Operation(type:'∛', value:Fraction(1, 1)),
  //     Operation(type: '-', value: Fraction(1, 8)),
  //     Operation(type: '*', value: Fraction(7, 5)),
  //     Operation(type: '/', value: Fraction(5, 7)),
  //     Operation(type: '+', value: Fraction(2, 9)),
  //     Operation(type: '-', value: Fraction(1, 9)),
  //     Operation(type: '*', value: Fraction(5, 3)),
  //     Operation(type: '-', value: Fraction(3, 4)),
  //     Operation(type: '+', value: Fraction(1, 12)),
  //     Operation(type: '-', value: Fraction(1, 24)),
  //   ],
  //   solution: [
  //    Operation(type: '-', value: Fraction(1, 8)),
  //     Operation(type: '+', value: Fraction(2, 9)),
  //     Operation(type: '-', value: Fraction(1, 9)),
  //     Operation(type:'√', value:Fraction(1, 1)), 
  //   ],
  // ),

  // // Level 28: Introduction to square root
  // HardcoreLevel(
  //   current: Fraction(16, 1),
  //   target: Fraction(3, 2),
  //   moves: 4,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '+', value: Fraction(1, 1)),
  //     Operation(type: '-', value: Fraction(4, 1)),
  //     Operation(type: '*', value: Fraction(2, 1)),
  //     Operation(type: '-', value: Fraction(7, 1)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '√', value: Fraction(1, 1)),
  //     Operation(type: '∛', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(50, 100)),
  //     Operation(type: '-%', value: Fraction(25, 100)),
  //     Operation(type: '*', value: Fraction(1, 2)),
  //     Operation(type: '/', value: Fraction(2, 1)),
  //     Operation(type: '+', value: Fraction(3, 1)),
  //     Operation(type: '-', value: Fraction(1, 1)),
  //     Operation(type: '+', value: Fraction(3, 4)),
  //     Operation(type: '-', value: Fraction(4, 3)),
  //     Operation(type: '+', value: Fraction(5, 1)),
  //     Operation(type: '-', value: Fraction(2, 1)),
  //     Operation(type: '*', value: Fraction(1, 2)),
  //     Operation(type: '*', value: Fraction(1, 8)),
  //   ],
  //   solution: [
  //     Operation(type: '+%', value: Fraction(50, 100)),
  //     Operation(type: '-%', value: Fraction(25, 100)),
  //     Operation(type: '*', value: Fraction(1, 8)),
  //      Operation(type: '√', value: Fraction(1, 1)),
  //   ],
  // ),

  // // Level 29: Introduction to cube root
  // HardcoreLevel(
  //   current: Fraction(8, 9),
  //   target: Fraction(2, 3),
  //   moves: 3,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '+', value: Fraction(2, 1)),
  //     Operation(type: '-', value: Fraction(6, 1)),
  //     Operation(type: '*', value: Fraction(2, 5)),
  //     Operation(type: '/', value: Fraction(3, 1)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '√', value: Fraction(1, 1)),
  //     Operation(type: '∛', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(100, 100)),
  //     Operation(type: '-%', value: Fraction(50, 100)),
  //     Operation(type: '*', value: Fraction(1, 3)),
  //     Operation(type: '/', value: Fraction(9, 1)),
  //     Operation(type: '+', value: Fraction(4, 9)),
  //     Operation(type: '-', value: Fraction(2, 1)),
  //     Operation(type: '*', value: Fraction(2, 3)),
  //     Operation(type: '/', value: Fraction(3, 2)),
  //     Operation(type: '+', value: Fraction(3, 8)),
  //     Operation(type: '-', value: Fraction(3, 1)),
  //     Operation(type: '-', value: Fraction(1, 9)),
  //     Operation(type: '+', value: Fraction(1, 4)),
  //   ],
  //   solution: [
  //     Operation(type: '+%', value: Fraction(100, 100)), // ∛27 = 3
  //     Operation(type: '√', value: Fraction(1, 1)),// This is extra, but cube root alone solves it
  //     Operation(type: '-%', value: Fraction(50, 100)),
  //   ],
  // ),

  // // Level 30: Mixed roots and operations
  // HardcoreLevel(
  //   current: Fraction(4, 25),
  //   target: Fraction(3, 5),
  //   moves: 4,
  //   rows: 4,
  //   cols: 5,
  //   operations: [
  //     Operation(type: '+', value: Fraction(1, 1)),
  //     Operation(type: '-', value: Fraction(8, 9)),
  //     Operation(type: '+', value: Fraction(2, 5)),
  //     Operation(type: '/', value: Fraction(4, 1)),
  //     Operation(type: '^2', value: Fraction(1, 1)),
  //     Operation(type: '^3', value: Fraction(1, 1)),
  //     Operation(type: '√', value: Fraction(1, 1)),
  //     Operation(type: '∛', value: Fraction(1, 1)),
  //     Operation(type: '+%', value: Fraction(25, 100)),
  //     Operation(type: '-%', value: Fraction(45, 100)),
  //     Operation(type: '-', value: Fraction(1, 8)),
  //     Operation(type: '+', value: Fraction(7, 6)),
  //     Operation(type: '+', value: Fraction(3, 5)),
  //     Operation(type: '-', value: Fraction(1, 1)),
  //     Operation(type: '-', value: Fraction(1, 4)),
  //     Operation(type: '+', value: Fraction(2, 9)),
  //     Operation(type: '+', value: Fraction(5, 8)),
  //     Operation(type: '-', value: Fraction(2, 1)),
  //     Operation(type: '*', value: Fraction(1, 8)),
  //     Operation(type: '/', value: Fraction(32, 1)),
  //   ],
  //   solution: [
  //     Operation(type: '/', value: Fraction(32, 1)), // √64 = 8
  //     Operation(type: '-', value: Fraction(1, 8)),// √8 = not perfect square, but we'll use cube root
  //     Operation(type: '+', value: Fraction(3, 5)),
  //      Operation(type: '+%', value: Fraction(25, 100)), // ∛8 = 2
  //   ],
  // ),

];